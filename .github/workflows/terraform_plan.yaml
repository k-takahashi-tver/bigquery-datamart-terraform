# main ブランチに *.tf の変更を含むプルリクを送ったときに以下を行い、結果をスレッドに上げてくれます
# - dev/stg/prd それぞれの環境で terraform plan を実行


name: terraform plan
run-name: Pusher ${{ github.actor }}, Workflow ${{ github.workflow }}
on:
  pull_request:
    paths:
      - terraform/**
      - scheduled_query/**
      - table_valued_function/**
      - user_defined_function/**
      - view/**
    branches:
      - main

jobs:
  terraform-plan-dev: 
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform # 作業ディレクトリ
    permissions:
      id-token: write
      pull-requests: write
      # 以下の権限がないとソースコードを読み取れずエラー出る
      contents: read
      packages: write
    outputs:
      plan: ${{ steps.plan_dev.outputs.plan }} 
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.7.0"
      
      # google cloud 認証
      # サービスアカウントのキーを secrets 変数に登録している
      - name: Authenticate with gcloud
        uses: google-github-actions/auth@v2
        with:
          project_id: tver-dev
          workload_identity_provider: ${{ secrets.WIF_PROVIDER_DEV }}
          service_account: ${{ secrets.WIF_SERVICE_ACCOUNT_EMAIL_DEV }}
      
      # # フォーマットチェック
      # - name: Terraform fmt
      #   id: fmt
      #   run: terraform fmt -check
      #   continue-on-error: true
      
      # terraform plan の出力に特殊文字が含まれているため、難読化してから環境変数に設定
      - name: Terraform init and plan
        id: plan_dev
        run: |
          terraform init -backend-config="./environments/devintegrate/dev.tfbackend"
          terraform plan -var-file ./environments/devintegrate/terraform.tfvars -no-color | tee plan_dev.txt
          PLAN_OUTPUT_DEV=$(base64 -w 0 plan_dev.txt)
          echo "plan=$PLAN_OUTPUT_DEV" >> "$GITHUB_OUTPUT"

  terraform-plan-stg:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform 
    permissions:
      id-token: write
      pull-requests: write
      contents: read
      packages: write
    outputs:
      plan: ${{ steps.plan_stg.outputs.plan }} 
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.7.0"
 
      # google cloud 認証
      # サービスアカウントのキーを secrets 変数に登録している
      - name: Authenticate with gcloud stg
        uses: google-github-actions/auth@v2
        with:
          project_id: tver-stg
          workload_identity_provider: ${{ secrets.WIF_PROVIDER_STG }}
          service_account: ${{ secrets.WIF_SERVICE_ACCOUNT_EMAIL_STG }}
      
      # staging
      - name: terraform plan stg
        id: plan_stg
        run: |
          terraform init -backend-config="./environments/staging/stg.tfbackend"
          terraform plan -var-file ./environments/staging/terraform.tfvars -no-color | tee plan_stg.txt
          PLAN_OUTPUT_STG=$(base64 -w 0 plan_stg.txt)
          echo "plan=$PLAN_OUTPUT_STG" >> "$GITHUB_OUTPUT"

  terraform-plan-prd:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform 
    permissions:
      id-token: write
      pull-requests: write
      contents: read
      packages: write
    outputs:
      plan: ${{ steps.plan_prd.outputs.plan }} 
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.7.0"
 
      # google cloud 認証
      - name: Authenticate with gcloud prd
        uses: google-github-actions/auth@v2
        with:
          project_id: tver-infla
          workload_identity_provider: ${{ secrets.WIF_PROVIDER_PRD }}
          service_account: ${{ secrets.WIF_SERVICE_ACCOUNT_EMAIL_PRD }}
      
      # production
      - name: terraform plan prd
        id: plan_prd
        run: |
          terraform init -backend-config="./environments/production/prd.tfbackend"
          terraform plan -var-file ./environments/production/terraform.tfvars -no-color | tee plan_prd.txt
          PLAN_OUTPUT_PRD=$(base64 -w 0 plan_prd.txt)
          echo "plan=$PLAN_OUTPUT_PRD" >> "$GITHUB_OUTPUT"

  create-comment:
    runs-on: ubuntu-latest
    needs: [terraform-plan-dev, terraform-plan-stg, terraform-plan-prd]
    defaults:
      run:
        working-directory: terraform
    permissions:
      pull-requests: write
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      # 各ステップの結果をプルリクに投稿する
      - uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `詳細は <a target=_blank href="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}">こちら</a>`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
